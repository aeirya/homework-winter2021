<html><head><title>Editor</title><script src="tiny_mce/tiny_mce.js" type="text/javascript"></script><script type="text/javascript">var onChangeCallbackCounter = 0;tinyMCE.init({mode : "textareas",theme : "advanced",extended_valid_elements : "a[name|href|target|title|onclick],img[class|src|border=0|alt|title|hspace|vspace|width|height|align|onmouseover|onmouseout|name],hr[class|width|size|noshade],font[face|size|color|style],span[class|align|style]",file_browser_callback : "fileBrowserCallback",onchange_callback : "onChangeCallback",plugins : "preview,print,contextmenu",theme_advanced_buttons1_add : "code,preview,print",theme_advanced_buttons2: "",theme_advanced_buttons3: "",theme_advanced_disable : "formatselect,styleselect,help,strikethrough",theme_advanced_toolbar_align : "left",theme_advanced_toolbar_location : "top",theme_advanced_path : false});function init(value) {setHTML(decodeURIComponent(value));}function getHTML() {return tinyMCE.getContent();}function setHTML(value) {tinyMCE.setContent(value);}function initEditor() {init(parent.initEditor());}function fileBrowserCallback(field_name, url, type) {}function onChangeCallback(tinyMCE) {// This purposely ignores the first callback event because each call// to setContent triggers an undo level which fires the callback// when no changes have yet been made.// setContent is not really the correct way of initializing this// editor with content. The content should be placed statically// (from the editor's perspective) within the textarea. This is a// problem from the portal's perspective because it's passing the// content via a javascript method (initMethod).if (onChangeCallbackCounter > 0) {}onChangeCallbackCounter++;}</script></head><body leftmargin="0" marginheight="0" marginwidth="0" rightmargin="0" topmargin="0" onLoad="initEditor();"><textarea id="textArea" name="textArea" style="height: 100%; width: 100%;"></textarea></body></html><script type="text/javascript">    function initEditor(){        return "";    }</script>